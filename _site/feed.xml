<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-05-03T07:23:35-07:00</updated><id>/</id><title type="html">My Notes</title><subtitle></subtitle><entry><title type="html">Devx command ref</title><link href="/blog/git-command-ref/" rel="alternate" type="text/html" title="Devx command ref" /><published>2020-05-03T00:00:00-07:00</published><updated>2020-05-03T00:00:00-07:00</updated><id>/blog/git-command-ref</id><content type="html" xml:base="/blog/git-command-ref/"></content><summary type="html">This is the list of commands useful to work with Devx</summary></entry><entry><title type="html">Devx command ref</title><link href="/blog/devx-commands/" rel="alternate" type="text/html" title="Devx command ref" /><published>2020-05-03T00:00:00-07:00</published><updated>2020-05-03T00:00:00-07:00</updated><id>/blog/devx-commands</id><content type="html" xml:base="/blog/devx-commands/">&lt;h1 id=&quot;devx-command-ref&quot;&gt;Devx command ref&lt;/h1&gt;

&lt;h2 id=&quot;devx-testing-files&quot;&gt;Devx testing files&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Run &lt;code class=&quot;highlighter-rouge&quot;&gt;devx sync&lt;/code&gt; to sync the local workspace with the devx machine&lt;/li&gt;
  &lt;li&gt;To run a test file use&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;devx pytest &amp;lt;path_of_test_file&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To run single test
&lt;code class=&quot;highlighter-rouge&quot;&gt;devx pytest &amp;lt;path_to_test_file&amp;gt;::&amp;lt;class_name&amp;gt;::&amp;lt;method_name&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;To run the test in debug
&lt;code class=&quot;highlighter-rouge&quot;&gt;devx pytest -s &amp;lt;path_to_test_file&amp;gt;&lt;/code&gt;
Add the command &lt;code class=&quot;highlighter-rouge&quot;&gt;import ipdb; ipdb.set_trace()&lt;/code&gt; at the line you want to debug&lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">This is the list of commands useful to work with Devx</summary></entry><entry><title type="html">Notes I got from Max D</title><link href="/blog/notes-from-maxd/" rel="alternate" type="text/html" title="Notes I got from Max D" /><published>2020-04-20T00:00:00-07:00</published><updated>2020-04-20T00:00:00-07:00</updated><id>/blog/notes-from-maxd</id><content type="html" xml:base="/blog/notes-from-maxd/">&lt;p&gt;¯_(ツ)_/¯&lt;/p&gt;
&lt;h1 id=&quot;kibana&quot;&gt;kibana&lt;/h1&gt;
&lt;p&gt;external_api:checkout AND action:charge AND status:FAILED AND “internal server error”&lt;/p&gt;

&lt;p&gt;https://logs.patreontools.com/_plugin/kibana/app/kibana#/discover?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-90d,mode:quick,to:now))&amp;amp;_a=(columns:!(_source),index:e902eac0-7423-11e8-8555-ef5c87a05a51,interval:auto,query:(language:lucene,query:’external_api:checkout%20AND%20action:charge%20AND%20status:FAILED%20AND%20%22internal%20server%20error%22’),sort:!(ts,desc))&lt;/p&gt;

&lt;h1 id=&quot;apm-trace&quot;&gt;apm trace&lt;/h1&gt;
&lt;p&gt;https://app.datadoghq.com/apm/resource/patreon.daemon.payments-worker/patreon.daemon_framework.worker_daemon.do_work/7fb0f0fa80c82952?end=1586486943289&amp;amp;env=production&amp;amp;graphType=flamegraph&amp;amp;index=apm-search&amp;amp;paused=false&amp;amp;query=%40patreon.uuid%3A5ed58f6a-12be-4f5a-8af9-9cf3f5ff830d&amp;amp;start=1586483343289&lt;/p&gt;

&lt;p&gt;verification email: verification_factor_email
https://www.patreon.com/auth/verify-device?token=7Aw24OTde2FO3WGMDUl8Ss1n-zc5kLurV3g7s_OfhA4&amp;amp;u=32187&lt;/p&gt;

&lt;h1 id=&quot;main&quot;&gt;Main&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql-main-production-writer.internal.patreon.com

mysql-main-production-reader.internal.patreon.com

mysql-payments-production-writer.internal.patreon.com

mysql-payments-production-reader.internal.patreon.com
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;while true; do devx sync; sleep 5; done
PMM&lt;/p&gt;

&lt;h1 id=&quot;restart-mysql-serverfault&quot;&gt;restart mysql serverfault&lt;/h1&gt;
&lt;p&gt;sudo /etc/init.d/mysql restart&lt;/p&gt;

&lt;p&gt;/etc/datadog-agent/conf.d/mysql.d/check.yaml&lt;/p&gt;

&lt;h3 id=&quot;devx-run-single-test&quot;&gt;devx run single test&lt;/h3&gt;
&lt;p&gt;devx pytest – test/app/api/routes/test_payment.py::TestGetPayments::test_get_filtered_payments
PATREON_PY_CONFIG_PATH=/etc/patreon/testing.yml py.test /opt/code/patreon_py/file_name_py&lt;/p&gt;

&lt;p&gt;devx run script in test mode locally
PATREON_PY_CONFIG_PATH=/etc/patreon/testing.yml patreon_repl file_name_py&lt;/p&gt;

&lt;p&gt;in a prod scripts box&lt;/p&gt;

&lt;p&gt;show provision logs
less /var/log/provision.log&lt;/p&gt;

&lt;p&gt;show all logs
journalctl -e | less&lt;/p&gt;

&lt;p&gt;./launchbot.py -e production -s payments-worker:24&lt;/p&gt;

&lt;p&gt;./launchbot.py -e development -s partitioned-queuer:2
./deploybot.py -e development -g python.partitioned-queuer ‘LOAD-TEST-20191122-01’&lt;/p&gt;

&lt;p&gt;show all payments-* logs
journalctl -u cron* –since “2019-08-05”  | less
journalctl -u cron-runner* –since “2019-08-05”  | less
journalctl -u session* –since “2020-04-09”  | less&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;journalctl -u septoria* –since “2020-04-20”&lt;/td&gt;
      &lt;td&gt;less&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;journalctl -u payments* –since “2020-04-21”&lt;/td&gt;
      &lt;td&gt;less&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;journalctl -u partitioned* –since “2019-11-27”&lt;/td&gt;
      &lt;td&gt;less&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;journalctl -u claus-external*&lt;/td&gt;
      &lt;td&gt;less&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;journalctl -u argus*&lt;/td&gt;
      &lt;td&gt;less&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;journalctl -u rollups-worker* –since “2019-06-03”&lt;/td&gt;
      &lt;td&gt;less&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;enable-debug-logging-gunicorn&quot;&gt;Enable debug logging gunicorn&lt;/h2&gt;
&lt;p&gt;–log-level debug&lt;/p&gt;

&lt;p&gt;vim /etc/systemd/system/patreonweb.service
sudo systemctl daemon-reload
sudo systemctl restart patreonweb&lt;/p&gt;

&lt;p&gt;show all payments workers running
./ec2_server_list.py | egrep ‘(partitioned-queuer|payments-worker|payment-response-worker|rollsup|webapi).&lt;em&gt;running.&lt;/em&gt;x-development’
./ec2_server_list.py | egrep ‘(partitioned-queuer|payments-worker).&lt;em&gt;running.&lt;/em&gt;x-production’
./ec2_server_list.py | egrep ‘(crons-prod).&lt;em&gt;running.&lt;/em&gt;x-production’
./ec2_server_list.py | egrep ‘(septoria).&lt;em&gt;running.&lt;/em&gt;x-production’&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;./ec2_server_list.py&lt;/td&gt;
      &lt;td&gt;egrep ‘(rollups).&lt;em&gt;running.&lt;/em&gt;x-production’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;deploy to all
./deploybot.py -e development -g python.partitioned-queuer,payments-worker,payment-response-worker load-test-dec-2019&lt;/p&gt;

&lt;p&gt;KILL a payments workers
./launchbot.py -ri partitioned-queuer:i-055d5e764918856d2
./launchbot.py -ri payments-worker:i-0e55242f19a55cd73
./launchbot.py -ri argus-production:i-0558271e058b4c67d
./launchbot.py -ri claus-external:i-0cf8f6946bdb4a6d7
./launchbot.py -ri claus-internal:i-04a85fcb6a534144f
./launchbot.py -ri pubsub-auditor:i-0ee36b200a1d8e9f3
./launchbot.py -ri webapi:i-051562c3aa8f751b6&lt;/p&gt;

&lt;p&gt;./launchbot.py -ri prod-scripts-honeybadger902:i-0082e3315fab4b065&lt;/p&gt;

&lt;p&gt;deploy to specific machines
./deploybot.py &lt;your sha=&quot;&quot;&gt; -g python.rollups-worker&lt;/your&gt;&lt;/p&gt;

&lt;p&gt;set count 
./launchbot.py -s payments-worker:4
./launchbot.py -s partitioned-queuer:2
./launchbot.py -s claus-internal:4
./launchbot.py -s claus-external:4
./launchbot.py -s rollups-worker:12
./launchbot.py -s rollups-cleaner:4&lt;/p&gt;

&lt;p&gt;./launchbot.py -s webapi:50&lt;/p&gt;

&lt;p&gt;./launchbot.py -s claus-external:1 -e development
./launchbot.py -s payments-worker:1 -e development
./launchbot.py -s partitioned-queuer:0 -e development&lt;/p&gt;

&lt;p&gt;provision a worker
./launchbot.py -a payments-worker:23 -e development
./launchbot.py -a partitioned-queuer:3 -e development
./launchbot.py -a claus-internal:4&lt;/p&gt;

&lt;p&gt;restart service
sudo systemctl restart partitioned-queuer.service
sudo systemctl restart payments-worker.service
sudo systemctl restart prod-scripts.service&lt;/p&gt;

&lt;p&gt;./deploybot.py –fast-operations restarts -g python.payments-worker&lt;/p&gt;

&lt;p&gt;Rebuild / relaunch
deploybot will reprovision the hosts, updating the ansible and patreon_py branches
./deploybot.py -g python.partitioned-queuer,payments-worker -e development&lt;/p&gt;

&lt;p&gt;launchbot –rebuild will tear down all of the machines and launch new ones
./launchbot.py –rebuild  payments-worker -p &lt;your ansible=&quot;&quot; branch=&quot;&quot;&gt; -e development&lt;/your&gt;&lt;/p&gt;

&lt;h2 id=&quot;sql-stuff&quot;&gt;SQL stuff&lt;/h2&gt;
&lt;p&gt;sql alchemy verbose logging
import logging
logging.basicConfig()
logging.getLogger(‘sqlalchemy.engine’).setLevel(logging.INFO)&lt;/p&gt;

&lt;p&gt;ALTER USER ‘payments’@’%’ IDENTIFIED BY ‘AM6xT4yaHfPVuDKHhtsgQC3ECf3BdV8T’;&lt;/p&gt;

&lt;p&gt;select count(*) from bills where status = ‘pending’ created_at = ‘2019-03-01 07:59:59’&lt;/p&gt;

&lt;p&gt;select * from txns t where t.failed_at is not null and t.created_at &amp;gt;= ‘02-19-2019’ order by txn_id desc limit 10&lt;/p&gt;

&lt;p&gt;select count(*) from txns where state = ‘queued’
select * from bill_payments where txn_id = 113125304
select * from txns where txn_id = 113125304&lt;/p&gt;

&lt;p&gt;select * from txns where txn_id = 114005719&lt;/p&gt;

&lt;p&gt;show open tables from patreon where In_use = true&lt;/p&gt;

&lt;p&gt;show processlist&lt;/p&gt;

&lt;p&gt;SELECT * FROM information_schema.processlist WHERE &lt;code class=&quot;highlighter-rouge&quot;&gt;STATE&lt;/code&gt; LIKE ‘waiting%’;&lt;/p&gt;

&lt;p&gt;select CONCAT(‘CALL mysql.rds_kill(‘, ID, ‘);’)  from INFORMATION_SCHEMA.PROCESSLIST where State like ‘Waiting for table metadata lock%’ and User = ‘patreonapp’ order by TIME DESC;&lt;/p&gt;

&lt;p&gt;select CONCAT(‘CALL mysql.rds_kill(‘, ID, ‘);’)  from INFORMATION_SCHEMA.PROCESSLIST where Command = ‘Sleep’ order by TIME DESC;&lt;/p&gt;

&lt;p&gt;select * from txns where txn_id in (110406886, 110893532)&lt;/p&gt;

&lt;p&gt;select * from transaction_state_history_log where txn_id = 110893532
CALL mysql.rds_kill(6567)&lt;/p&gt;

&lt;p&gt;SHOW ENGINE INNODB STATUS&lt;/p&gt;

&lt;h1 id=&quot;show-all-open-txns&quot;&gt;show all open txns&lt;/h1&gt;
&lt;p&gt;SELECT * FROM information_schema.innodb_trx&lt;/p&gt;

&lt;p&gt;show variables&lt;/p&gt;

&lt;p&gt;select count(distinct left(host,instr(host,’:’)-1)) from processlist ;
select count(&lt;em&gt;), left(host,instr(host,’:’)-1) from processlist group by left(host,instr(host,’:’)-1) order by count(&lt;/em&gt;) desc limit 20;&lt;/p&gt;

&lt;p&gt;select INDEX_NAME, COUNT_STAR, round(SUM_TIMER_WAIT/pow(10,12),1) stw_s
from performance_schema.table_io_waits_summary_by_index_usage
where OBJECT_SCHEMA=’patreon’ and OBJECT_NAME=’bills’ order by count_star desc limit 100;&lt;/p&gt;

&lt;p&gt;check long runnign queries
SELECT ID, USER, LEFT(HOST, ( LOCATE( ‘:’, HOST ) - 1 ) ) AS HOST, COMMAND, TIME, REPLACE(SUBSTRING(info,1,50),”\n”,””) info_50 FROM INFORMATION_SCHEMA.PROCESSLIST WHERE COMMAND NOT LIKE ‘Binlog Dump%’ and COMMAND NOT LIKE ‘Sleep’ ORDER BY TIME DESC LIMIT 20;&lt;/p&gt;

&lt;p&gt;show status where &lt;code class=&quot;highlighter-rouge&quot;&gt;variable_name&lt;/code&gt; = ‘Threads_connected’;&lt;/p&gt;

&lt;p&gt;SHOW GLOBAL STATUS;&lt;/p&gt;

&lt;p&gt;Show framentation  of tables
./launchbot.py -ri argus-production:i-0484780d00371648f
https://serverfault.com/questions/202000/how-find-and-fix-fragmented-mysql-tablesz&lt;/p&gt;

&lt;p&gt;Percona monitoring
centos@172.31.12.209&lt;/p&gt;

&lt;p&gt;alias patreon_repl=’PYTHONPATH=/opt/code/patreon_py /opt/code/patreon_py/venv/bin/python’&lt;/p&gt;</content><summary type="html">Thanks to Max.D I was able to get this handy notes from him</summary></entry><entry><title type="html">Welcome to Massively: The Jekyll Theme!</title><link href="/blog/welcome-to-massively-the-jekyll-theme/" rel="alternate" type="text/html" title="Welcome to Massively: The Jekyll Theme!" /><published>2017-10-31T00:00:00-07:00</published><updated>2017-10-31T00:00:00-07:00</updated><id>/blog/welcome-to-massively-the-jekyll-theme</id><content type="html" xml:base="/blog/welcome-to-massively-the-jekyll-theme/">&lt;h2 id=&quot;how-to-use-this-theme&quot;&gt;How to Use This Theme&lt;/h2&gt;
&lt;p&gt;Just go ahead and read up on &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;how to install Jekyll&lt;/a&gt;. It’s not too hard I promise!&lt;/p&gt;

&lt;p&gt;Download this repository &lt;a href=&quot;https://github.com/iwiedenm/jekyll-theme-massively&quot;&gt;here&lt;/a&gt; and save it to any folder you want.&lt;/p&gt;

&lt;p&gt;Open a terminal window or a command line and &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; to that location.&lt;/p&gt;

&lt;p&gt;Then enter: &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;. You can now access your new Jekyll site from &lt;a href=&quot;http://127.0.0.1:4000/&quot;&gt;http://127.0.0.1:4000/&lt;/a&gt;. Have fun exploring your new site!&lt;/p&gt;

&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;h3 id=&quot;auto-generating-sitemap&quot;&gt;Auto-Generating Sitemap&lt;/h3&gt;
&lt;p&gt;The sitemap is auto generated! Just simply change the front matter of each site. It looks like so…&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sitemap:
    priority: 0.7
    lastmod: 2017-11-02
    changefreq: weekly
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;formspring-integration&quot;&gt;Formspring integration&lt;/h3&gt;
&lt;p&gt;The contact form below each page on the footer actually collects information! Just change your email address in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file!&lt;/p&gt;</content><summary type="html">Huge thanks to HTML5 UP for making this awesome template! Let's see what it can do</summary></entry></feed>
